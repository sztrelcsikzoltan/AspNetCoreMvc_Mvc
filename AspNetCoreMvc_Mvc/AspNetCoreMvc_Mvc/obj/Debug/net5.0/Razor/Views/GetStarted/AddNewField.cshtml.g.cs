#pragma checksum "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\GetStarted\AddNewField.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "95e0ad57e6bcf03d6a5dab4f8b6720af4f04d730"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_GetStarted_AddNewField), @"mvc.1.0.view", @"/Views/GetStarted/AddNewField.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\_ViewImports.cshtml"
using AspNetCoreMvc_Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\_ViewImports.cshtml"
using AspNetCoreMvc_Mvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"95e0ad57e6bcf03d6a5dab4f8b6720af4f04d730", @"/Views/GetStarted/AddNewField.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fe8f896a9f1199a05e02d8a830325cc6fb68bd59", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_GetStarted_AddNewField : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("button"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "GetStarted", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AddSearchCapability", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AddValidation", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\GetStarted\AddNewField.cshtml"
  
    ViewData["Title"] = "Add a new field";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container\">\r\n    <div class=\"div-flex\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95e0ad57e6bcf03d6a5dab4f8b6720af4f04d7305190", async() => {
                WriteLiteral("Previous: Add search capability");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        <span class=\"span-flex\"></span>\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95e0ad57e6bcf03d6a5dab4f8b6720af4f04d7306912", async() => {
                WriteLiteral("Next: Add validation");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>

    <h2>Part 8, add a new field to an ASP.NET Core MVC app</h2>

    <p>In this section <a href=""https://docs.microsoft.com/en-us/ef/core/get-started/aspnetcore/new-db"" data-linktype=""absolute-path"">Entity Framework</a> Code First Migrations is used to:</p>
    <ul>
        <li>Add a new field to the model.</li>
        <li>Migrate the new field to the database.</li>
    </ul>
    <p>When EF Code First is used to automatically create a database, Code First:</p>
    <ul>
        <li>Adds a table to the database to  track the schema of the database.</li>
        <li>Verifies the database is in sync with the model classes it was generated from. If they aren't in sync, EF throws an exception. This makes it easier to find inconsistent database/code issues.</li>
    </ul>
    <h4 id=""add-a-rating-property-to-the-movie-model-1"">Add a Rating Property to the Movie Model</h4>
    <p>Add a <code>Rating</code> property to <em>Models/Movie.cs</em>:</p>
<pre><code class=""lang-csharp"">using Sys");
            WriteLiteral(@"tem;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace MvcMovie.Models
{
    public class Movie
    {
        public int Id { get; set; }
        public string Title { get; set; }

        [Display(Name = &quot;Release Date&quot;)]
        [DataType(DataType.Date)]
        public DateTime ReleaseDate { get; set; }
        public string Genre { get; set; }

        [Column(TypeName = &quot;decimal(18, 2)&quot;)]
        public decimal Price { get; set; }
        public string Rating { get; set; }
    }
}
</code></pre>
    <p>Build the app</p>
    <p>Ctrl+Shift+B</p>

    <p>Because you've added a new field to the <code>Movie</code> class, you need to update the property binding list so this new property will be included. In <em>MoviesController.cs</em>, update the <code>[Bind]</code> attribute for both the <code>Create</code> and <code>Edit</code> action methods to include the <code>Rating</code> property:</p>
<pre><code class=");
            WriteLiteral(@"""lang-csharp"">[Bind(&quot;Id,Title,ReleaseDate,Genre,Price,Rating&quot;)]
</code></pre>
    <p>Update the view templates in order to display, create, and edit the new <code>Rating</code> property in the browser view.</p>
    <p>Edit the <em>/Views/Movies/Index.cshtml</em> file and add a <code>Rating</code> field:</p>
<pre><code class=""lang-cshtml"" highlight-lines=""16,38"">&lt;thead&gt;
    &lt;tr&gt;
        &lt;th&gt;
            ");
            WriteLiteral("@Html.DisplayNameFor(model =&gt; model.Movies[0].Title)\r\n        &lt;/th&gt;\r\n        &lt;th&gt;\r\n            ");
            WriteLiteral("@Html.DisplayNameFor(model =&gt; model.Movies[0].ReleaseDate)\r\n        &lt;/th&gt;\r\n        &lt;th&gt;\r\n            ");
            WriteLiteral("@Html.DisplayNameFor(model =&gt; model.Movies[0].Genre)\r\n        &lt;/th&gt;\r\n        &lt;th&gt;\r\n            ");
            WriteLiteral("@Html.DisplayNameFor(model =&gt; model.Movies[0].Price)\r\n        &lt;/th&gt;\r\n        &lt;th&gt;\r\n            ");
            WriteLiteral("@Html.DisplayNameFor(model =&gt; model.Movies[0].Rating)\r\n        &lt;/th&gt;\r\n        &lt;th&gt;&lt;/th&gt;\r\n    &lt;/tr&gt;\r\n&lt;/thead&gt;\r\n&lt;tbody&gt;\r\n    ");
            WriteLiteral("@foreach (var item in Model.Movies)\r\n    {\r\n        &lt;tr&gt;\r\n            &lt;td&gt;\r\n                ");
            WriteLiteral("@Html.DisplayFor(modelItem =&gt; item.Title)\r\n            &lt;/td&gt;\r\n            &lt;td&gt;\r\n                ");
            WriteLiteral("@Html.DisplayFor(modelItem =&gt; item.ReleaseDate)\r\n            &lt;/td&gt;\r\n            &lt;td&gt;\r\n                ");
            WriteLiteral("@Html.DisplayFor(modelItem =&gt; item.Genre)\r\n            &lt;/td&gt;\r\n            &lt;td&gt;\r\n                ");
            WriteLiteral("@Html.DisplayFor(modelItem =&gt; item.Price)\r\n            &lt;/td&gt;\r\n            &lt;td&gt;\r\n                ");
            WriteLiteral(@"@Html.DisplayFor(modelItem =&gt; item.Rating)
            &lt;/td&gt;
            &lt;td&gt;
</code></pre>
    <p>Update the <em>/Views/Movies/Create.cshtml</em> with a <code>Rating</code> field.</p>

    <p>You can copy/paste the previous &quot;form group&quot; and let intelliSense help you update the fields. IntelliSense works with <a href=""https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/intro?view=aspnetcore-5.0"" data-linktype=""relative-path"">Tag Helpers</a>.</p>
    <p><img src=""/img/addnewfield01-cr.png"" alt=""The developer has typed the letter R for the attribute value of asp-for in the second label element of the view. An Intellisense contextual menu has appeared showing the available fields, including Rating, which is highlighted in the list automatically. When the developer clicks the field or presses Enter on the keyboard, the value will be set to Rating."" title=""The developer has typed the letter R for the attribute value of asp-for in the second label element of the view. ");
            WriteLiteral(@"An Intellisense contextual menu has appeared showing the available fields, including Rating, which is highlighted in the list automatically. When the developer clicks the field or presses Enter on the keyboard, the value will be set to Rating.""></p>

    <p>Update the remaining templates.</p>
    <p>Update the <code>SeedData</code> class so that it provides a value for the new column. A sample change is shown below, but you'll want to make this change for each <code>new Movie</code>.</p>
<pre><code class=""lang-csharp"" highlight-lines=""6"">new Movie
{
    Title = &quot;When Harry Met Sally&quot;,
    ReleaseDate = DateTime.Parse(&quot;1989-1-11&quot;),
    Genre = &quot;Romantic Comedy&quot;,
    Rating = &quot;R&quot;,
    Price = 7.99M
},
</code></pre>
    <p>The app won't work until the DB is updated to include the new field. If it's run now, the following <code>SqlException</code> is thrown:</p>
    <p><code>SqlException: Invalid column name 'Rating'.</code></p>
    <p>This error occurs becau");
            WriteLiteral(@"se the updated Movie model class is different than the schema of the Movie table of the existing database. (There's no <code>Rating</code> column in the database table.)</p>
    <p>There are a few approaches to resolving the error:</p>
    <ol>
        <li>
            <p>Have the Entity Framework automatically drop and re-create the database based on the new model class schema. This approach is very convenient early in the development cycle when you're doing active development on a test database; it allows you to quickly evolve the model and database schema together. The downside, though, is that you lose existing data in the database — so you don't want to use this approach on a production database! Using an initializer to automatically seed a database with test data is often a productive way to develop an application. This is a good approach for early development and when using SQLite.</p>
        </li>
        <li>
            <p>Explicitly modify the schema of the existing database so that it matc");
            WriteLiteral(@"hes the model classes. The advantage of this approach is that you keep your data. You can make this change either manually or by creating a database change script.</p>
        </li>
        <li>
            <p>Use Code First Migrations to update the database schema.</p>
        </li>
    </ol>
    <p>For this tutorial, Code First Migrations is used.</p>
    <p>From the <strong>Tools</strong> menu, select <strong>NuGet Package Manager &gt; Package Manager Console</strong>.</p>
    <p><img src=""/img/addnewfield02-pmc.png"" alt=""PMC menu"" title=""PMC menu""></p>
    <p>In the PMC, enter the following commands:</p>
<pre><code class=""lang-powershell"">Add-Migration Rating
Update-Database
</code></pre>
    <p>The <code>Add-Migration</code> command tells the migration framework to examine the current <code>Movie</code> model with the current <code>Movie</code> DB schema and create the necessary code to migrate the DB to the new model.</p>
    <p>The name &quot;Rating&quot; is arbitrary and is used to name ");
            WriteLiteral(@"the migration file. It's helpful to use a meaningful name for the migration file.</p>
    <p>If all the records in the DB are deleted, the initialize method will seed the DB and include the <code>Rating</code> field.</p>

    <!-- End of VS tabs -->
    <p>Run the app and verify you can create, edit, and display movies with a <code>Rating</code> field.</p>

    <div class=""div-flex"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95e0ad57e6bcf03d6a5dab4f8b6720af4f04d73017356", async() => {
                WriteLiteral("Previous: Add search capability");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        <span class=\"span-flex\"></span>\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95e0ad57e6bcf03d6a5dab4f8b6720af4f04d73019079", async() => {
                WriteLiteral("Next: Add validation");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n\r\n</div>\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
