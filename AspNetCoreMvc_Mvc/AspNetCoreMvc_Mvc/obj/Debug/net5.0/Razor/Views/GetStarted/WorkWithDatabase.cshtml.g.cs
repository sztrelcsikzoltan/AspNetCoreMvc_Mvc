#pragma checksum "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\GetStarted\WorkWithDatabase.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cf911e8a769d3d22bf32ae74b73d5fa3091c9c84"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_GetStarted_WorkWithDatabase), @"mvc.1.0.view", @"/Views/GetStarted/WorkWithDatabase.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\_ViewImports.cshtml"
using AspNetCoreMvc_Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\_ViewImports.cshtml"
using AspNetCoreMvc_Mvc.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cf911e8a769d3d22bf32ae74b73d5fa3091c9c84", @"/Views/GetStarted/WorkWithDatabase.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fe8f896a9f1199a05e02d8a830325cc6fb68bd59", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_GetStarted_WorkWithDatabase : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("button"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "GetStarted", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AddModel", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "ControllerMethods", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Data\pers dev\IT\KKSZKI\back end\211013 MVC beadando\AspNetCoreMvc_Mvc\AspNetCoreMvc_Mvc\Views\GetStarted\WorkWithDatabase.cshtml"
  
    ViewData["Title"] = "Work with a database";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container\">\r\n    <div class=\"div-flex\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cf911e8a769d3d22bf32ae74b73d5fa3091c9c845218", async() => {
                WriteLiteral("Previous: Add a Model");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        <span class=\"span-flex\"></span>\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cf911e8a769d3d22bf32ae74b73d5fa3091c9c846930", async() => {
                WriteLiteral("Next: Controller methods");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>

    <h2>Part 5, work with a database in an ASP.NET Core MVC app</h2>

    <p>The <code>MvcMovieContext</code> object handles the task of connecting to the database and mapping <code>Movie</code> objects to database records. The database context is registered with the <a href=""https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-5.0"" data-linktype=""relative-path"">Dependency Injection</a> container in the <code>ConfigureServices</code> method in the <em>Startup.cs</em> file:</p>
    <pre><code class=""lang-csharp"" highlight-lines=""5-6"">public void ConfigureServices(IServiceCollection services)
{
    services.AddControllersWithViews();

    services.AddDbContext&lt;MvcMovieContext&gt;(options =&gt;
    options.UseSqlServer(Configuration.GetConnectionString(&quot;MvcMovieContext&quot;)));
}
</code></pre>
    <p>The ASP.NET Core <a href=""https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-5.0"" data-linktype=""re");
            WriteLiteral(@"lative-path"">Configuration</a> system reads the <code>ConnectionString</code> key. For local development, it gets the connection string from the <em>appsettings.json</em> file:</p>
<pre><code class=""lang-json"" highlight-lines=""2"">&quot;ConnectionStrings&quot;: {
  &quot;MvcMovieContext&quot;: &quot;Server=(localdb)\\mssqllocaldb;Database=MvcMovieContext-2;Trusted_Connection=True;MultipleActiveResultSets=true&quot;
}
</code></pre>

    <p>When the app is deployed to a test or production server, an environment variable can be used to set the connection string to a production SQL Server. For more information, see <a href=""https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-5.0"" data-linktype=""relative-path"">Configuration</a>.</p>

    <h4 id=""sql-server-express-localdb-1"">SQL Server Express LocalDB</h4>
    <p>LocalDB:</p>
    <ul>
        <li>Is a lightweight version of the SQL Server Express Database Engine, installed by default with Visual Studio.</li>
        ");
            WriteLiteral(@"<li>Starts on demand by using a connection string.</li>
        <li>Is targeted for program development. It runs in user mode, so there's no complex configuration.</li>
        <li>By default creates <em>.mdf</em> files in the <em>C:/Users/{user}</em> directory.</li>
    </ul>
    <h4 id=""examine-the-database"">Examine the database</h4>
    <p>From the <strong>View</strong> menu, open <strong>SQL Server Object Explorer</strong> (SSOX).</p>
    <p><img src=""/img/workdatabase01-ssox5.png"" alt=""View menu"" title=""View menu"" data-linktype=""relative-path""></p>
    <p>Right-click on the <code>Movie</code> table <strong>&gt; View Designer</strong></p>
    <p><img src=""/img/workdatabase02-design.png"" alt=""Right-click on the Movie table &gt; View Designer"" title=""Right-click on the Movie table &gt; View Designer"" data-linktype=""relative-path""></p>
    <p><img src=""/img/workdatabase03-dv.png"" alt=""Movie table open in Designer"" title=""Movie table open in Designer"" data-linktype=""relative-path""></p>
    <p>Note t");
            WriteLiteral(@"he key icon next to <code>ID</code>. By default, EF makes a property named <code>ID</code> the primary key.</p>
    <p>Right-click on the <code>Movie</code> table <strong>&gt; View Data</strong></p>
    <p><img src=""/img/workdatabase04-ssox2.png"" alt=""Right-click on the Movie table &gt; View Data"" title=""Right-click on the Movie table &gt; View Data"" data-linktype=""relative-path""></p>
    <p><img src=""/img/workdatabase05-vd22.png"" alt=""Movie table open showing table data"" title=""Movie table open showing table data"" data-linktype=""relative-path""></p>

    <h4 id=""seed-the-database-1"">Seed the database</h4>
    <p>Create a new class named <code>SeedData</code> in the <em>Models</em> folder. Replace the generated code with the following:</p>
<pre><code class=""lang-csharp"">using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using MvcMovie.Data;
using System;
using System.Linq;

namespace MvcMovie.Models
{
    public static class SeedData
    {
        public stati");
            WriteLiteral(@"c void Initialize(IServiceProvider serviceProvider)
        {
            using (var context = new MvcMovieContext(
                serviceProvider.GetRequiredService&lt;
                    DbContextOptions&lt;MvcMovieContext&gt;&gt;()))
            {
                // Look for any movies.
                if (context.Movie.Any())
                {
                    return;   // DB has been seeded
                }

                context.Movie.AddRange(
                    new Movie
                    {
                        Title = &quot;When Harry Met Sally&quot;,
                        ReleaseDate = DateTime.Parse(&quot;1989-2-12&quot;),
                        Genre = &quot;Romantic Comedy&quot;,
                        Price = 7.99M
                    },

                    new Movie
                    {
                        Title = &quot;Ghostbusters &quot;,
                        ReleaseDate = DateTime.Parse(&quot;1984-3-13&quot;),
                        Genre ");
            WriteLiteral(@"= &quot;Comedy&quot;,
                        Price = 8.99M
                    },

                    new Movie
                    {
                        Title = &quot;Ghostbusters 2&quot;,
                        ReleaseDate = DateTime.Parse(&quot;1986-2-23&quot;),
                        Genre = &quot;Comedy&quot;,
                        Price = 9.99M
                    },

                    new Movie
                    {
                        Title = &quot;Rio Bravo&quot;,
                        ReleaseDate = DateTime.Parse(&quot;1959-4-15&quot;),
                        Genre = &quot;Western&quot;,
                        Price = 3.99M
                    }
                );
                context.SaveChanges();
            }
        }
    }
}
</code></pre>
    <p>If there are any movies in the database, the seed initializer returns and no movies are added.</p>
<pre><code class=""lang-csharp"">if (context.Movie.Any())
{
    return;  // DB has been seeded.
}
</c");
            WriteLiteral(@"ode></pre>
    <p><a name=""si""></a></p>
    <h4 id=""add-the-seed-initializer-1"">Add the seed initializer</h4>
    <p>Replace the contents of <em>Program.cs</em> with the following code:</p>
<pre><code class=""lang-csharp"">using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using MvcMovie.Data;
using MvcMovie.Models;
using System;

namespace MvcMovie
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var host = CreateHostBuilder(args).Build();

            using (var scope = host.Services.CreateScope())
            {
                var services = scope.ServiceProvider;

                try
                {
                    SeedData.Initialize(services);
                }
                catch (Exception ex)
                {
                    var logger = services.GetRequiredService&lt;ILogger&lt;Program&gt;&gt;();
      ");
            WriteLiteral(@"              logger.LogError(ex, &quot;An error occurred seeding the DB.&quot;);
                }
            }

            host.Run();

        }

        public static IHostBuilder CreateHostBuilder(string[] args) =&gt;
            Host.CreateDefaultBuilder(args)
                .ConfigureWebHostDefaults(webBuilder =&gt;
                {
                    webBuilder.UseStartup&lt;Startup&gt;();
                });
    }
}
</code></pre>
    <p>Test the app.</p>

    <p>Delete all the records in the database. You can do this with the delete links in the browser or from SSOX.</p>
    <p>Force the app to initialize, calling the methods in the <code>Startup</code> class, so the seed method runs. To force initialization, IIS Express must be stopped and restarted. You can do this with any of the following approaches:</p>
    <ul>
        <li>
            <p>Right-click the IIS Express system tray icon in the notification area and tap <strong>Exit</strong> or <strong>Stop Site</strong>:");
            WriteLiteral(@"</p>
            <p><img src=""/img/workdatabase06-iisexicon.png"" alt=""IIS Express system tray icon"" title=""IIS Express system tray icon""></p>
            <p><img src=""/img/workdatabase06-stopiis.png"" alt=""Contextual menu"" title=""Contextual menu""></p>
            <ul>
                <li>If you were running VS in non-debug mode, press F5 to run in debug mode</li>
                <li>If you were running VS in debug mode, stop the debugger and press F5</li>
            </ul>
        </li>
    </ul>

    <p>The app shows the seeded data.</p>
    <p><img src=""/img/workdatabase07-m55.png"" alt=""MVC Movie app open in Microsoft Edge showing movie data"" title=""MVC Movie app open in Microsoft Edge showing movie data""></p>

    <div class=""div-flex"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cf911e8a769d3d22bf32ae74b73d5fa3091c9c8417904", async() => {
                WriteLiteral("Previous: Add a Model");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        <span class=\"span-flex\"></span>\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cf911e8a769d3d22bf32ae74b73d5fa3091c9c8419617", async() => {
                WriteLiteral("Next: Controller methods");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n\r\n</div>\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
