@{
    ViewData["Title"] = "Example2";
}

<div class="container">
    <div class="div-flex">
        <a class="button" asp-area="" asp-controller="Examples" asp-action="Example01">Previous: Example 1</a>
        <span class="span-flex"></span>
        <a class="button" asp-area="" asp-controller="Examples" asp-action="Example03">Next: Example 3</a>
    </div>

    <h2>Example 2</h2>

    <p>Similar to the previous example, we use here an <a href="https://developer.mozilla.org/docs/Web/HTTP/Methods" data-linktype="external">HTTP GET</a> method, invoked by appending <code>/HelloWorld/Welcome/</code> to the URL:</p>
    <pre><code class="lang-csharp">using Microsoft.AspNetCore.Mvc;

namespace AspNetCoreMvc_Mvc.Controllers
{
    public class HelloWorldController : Controller
    {
        // GET: /HelloWorld/Welcome/ 

        public string Welcome()
        {
            return &quot;This is the Welcome action method...&quot;;
        }
    }
}
</code></pre>

    <p>Press this button to envoke the example code: <a class="button whitespace_nowrap" asp-area="" target="_blank" asp-controller="HelloWorld" asp-action="Welcome">Run example 2</a></p>

    <p>In the preceding URL segments:</p>
    <ul>
        
        <li>
            Since <code>Welcome</code> is not the default <code>Index</code> method, we had to provide its name in the URL as an action.
        </li>
        <li>
            For this URL, the controller is <code>HelloWorld</code> and <code>Welcome</code> is the action method.
        </li>
    </ul>

    <div class="div-flex">
        <a class="button" asp-area="" asp-controller="Examples" asp-action="Example01">Previous: Example 1</a>
        <span class="span-flex"></span>
        <a class="button" asp-area="" asp-controller="Examples" asp-action="Example03">Next: Example 3</a>
    </div>

</div>

